from wicked_expressions:api import Scoreboard, ExpressionNode, StaticVar, Int, Bool, this, Float

from ../../utils import summon
from ../../xp_bar import start_xp_bar_countdown, stop_xp_bar_countdown
from ../../pvp import enable_pvp, disable_pvp
from ../../gui import bind_gui_item
from ../../teams import join_team, Team, leave_current_team, get_team_size, TEAM_MEMBER_TAG
from ../../ender_chest import set_ender_chest_item, clear_ender_chest
from ../../game_state import bind_game_state_init, bind_game_state_exit,
                             GameState, set_game_state

countdown_timer = StaticVar(Int)
countdown_started = StaticVar(Bool)
LABEL_TAG = 'pvpx.choose_team.label'

def _generate_item_lore_modifier(target_0: ExpressionNode, target_1: ExpressionNode, color: str = 'gray'):
    modifier = {
        "function": "minecraft:set_lore",
        "entity": "this",
        "lore": [
            [
                [
                    {
                        "score": {
                            "name": target_0.holder,
                            "objective": target_0.obj
                        },
                        "color": color,
                        "italic": false
                    },
                    {
                        "text": "/",
                        "color": color,
                        "italic": false
                    },
                    {
                        "score": {
                            "name": target_1.holder,
                            "objective": target_1.obj
                        },
                        "color": color,
                        "italic": false
                    }
                ]
            ]
        ],
        "replace": true
    }

    return modifier

def update_ender_chest_gui():
    red_team_item = ['red_concrete', '{pvpx:{id:"choose_team.red"},display:{Name:\'{"text":"Team Red","color":"red","italic":false}\'}}']
    blue_team_item = ['blue_concrete', '{pvpx:{id:"choose_team.blue"},display:{Name:\'{"text":"Team Blue","color":"blue","italic":false}\'}}']
    spectator_item = ['ender_eye', '{pvpx:{id:"choose_team.spectator"},display:{Name:\'{"text":"Spectator","color":"gray","italic":false}\'}}']
    leave_team_item = ['oak_door', '{pvpx:{id:"choose_team.leave_team"},display:{Name:\'{"text":"Leave Team","color":"gray","italic":false}\'}}']

    max_team_size = Scoreboard('pvpx')['.max_team_size']
    red_team_item_modifier_path = 'pvpx:hardcoded/choose_team/item_lore/red_team'
    blue_team_item_modifier_path = 'pvpx:hardcoded/choose_team/item_lore/blue_team'
    red_team_full_item_modifier_path = 'pvpx:hardcoded/choose_team/item_lore/red_team_full'
    blue_team_full_item_modifier_path = 'pvpx:hardcoded/choose_team/item_lore/blue_team_full'

    red_team_members = get_team_size(Team.RED)
    blue_team_members = get_team_size(Team.BLUE)

    item_modifier red_team_item_modifier_path _generate_item_lore_modifier(red_team_members, max_team_size)
    item_modifier blue_team_item_modifier_path _generate_item_lore_modifier(blue_team_members, max_team_size)
    item_modifier red_team_full_item_modifier_path _generate_item_lore_modifier(red_team_members, max_team_size, color='dark_red')
    item_modifier blue_team_full_item_modifier_path _generate_item_lore_modifier(blue_team_members, max_team_size, color='dark_red')

    clear_ender_chest()
    if get_team_size(Team.RED) < max_team_size:
        set_ender_chest_item(col=3, row=1, item_data=red_team_item, modifier=red_team_item_modifier_path)
    else:
        set_ender_chest_item(col=3, row=1, item_data=red_team_item, modifier=red_team_full_item_modifier_path)
    if get_team_size(Team.BLUE) < max_team_size:
        set_ender_chest_item(col=5, row=1, item_data=blue_team_item, modifier=blue_team_item_modifier_path)
    else:
        set_ender_chest_item(col=5, row=1, item_data=blue_team_item, modifier=blue_team_full_item_modifier_path)
    set_ender_chest_item(col=4, row=1, item_data=spectator_item)
    set_ender_chest_item(col=4, row=2, item_data=leave_team_item)

def reset_countdown():
    global countdown_started

    stop_xp_bar_countdown()
    countdown_started = False    

def gui_join_team_red():
    join_team(Team.RED)
    reset_countdown()

def gui_join_team_blue():
    join_team(Team.BLUE)
    reset_countdown()

def gui_join_team_spectator():
    join_team(Team.SPECTATOR)
    reset_countdown()

def gui_leave_team():
    global countdown_timer

    leave_current_team()
    countdown_timer = -1
    stop_xp_bar_countdown()

def init():
    disable_pvp()
    kill @e[type=text_display, tag=LABEL_TAG]
    label_y_pos = 101.5
    summon minecraft:text_display 0 label_y_pos 6 {Tags:[LABEL_TAG],text:'{"text":"CHOOSE YOUR TEAM!","color":"white","bold":true}'}
    summon minecraft:text_display 0 label_y_pos 6 {Tags:[LABEL_TAG],text:'{"text":"CHOOSE YOUR TEAM!","color":"white","bold":true}'}:
        this.Rotation = [Float(180.0), Float(0.0)]

    setblock 0 100 6 minecraft:ender_chest[facing=north]

def exit():
    kill @e[type=text_display, tag=LABEL_TAG]
    as @a:
        clear_ender_chest()
    
    # removes the ender chest in the middle for spectators
    setblock 0 100 6 minecraft:skeleton_skull destroy

def tick():
    global countdown_timer, countdown_started

    # ambient particles
    particle minecraft:end_rod 0 120 0 7 9 7 0.1 2 force
    particle minecraft:end_rod 0 70 0 7 20 7 0.1 5 force

    # lock-in teams countdown
    stray_players = StaticVar(Int)

    with stray_players.store():
        if entity @a[tag=!TEAM_MEMBER_TAG]

    if stray_players != 0:
        countdown_started = False
    else:
        if not countdown_started:
            COUNTDOWN_DURATION_TICKS = 200

            countdown_timer = COUNTDOWN_DURATION_TICKS
            countdown_started = True

            as @a:
                start_xp_bar_countdown(COUNTDOWN_DURATION_TICKS)

        if countdown_timer >= 1:
            countdown_timer -= 1

        # gets rid of annoying levelup sound that I cant avoid lol
        stopsound @a * minecraft:entity.player.levelup

        tick_of_second = StaticVar(Int)
        tick_of_second = countdown_timer % 20

        if tick_of_second == 19:
            as @a at @s:
                playsound minecraft:block.note_block.hat master @s ~ ~ ~ 1 1

        # seconds_left = StaticVar(Int)
        # seconds_left = countdown_timer / 20 + 1

        #     if seconds_left <= 5:
        #         if seconds_left > 0:
        #             as @a at @s:
        #                 title @s times 0 5 5
        #                 title @s title {"score": {"name": seconds_left.holder, "objective": seconds_left.obj}, "color": "green"}

        if countdown_timer == 0:
            set_game_state(GameState.CHOOSE_CLASS)

def player_load():
    spawnpoint @s 0 100 0 0

def player_tick():
    update_ender_chest_gui()

    # teleports player into the room
    # in case they spawn on the roof
    if entity @s[x=0, y=180, z=0, dx=0, dy=0, dz=0]:
        tp @s 0 100 0

bind_game_state_init(init, GameState.CHOOSE_TEAM)
bind_game_state_exit(exit, GameState.CHOOSE_TEAM)
bind_gui_item('red_concrete', 'choose_team.red', gui_join_team_red, auto_close=True)
bind_gui_item('blue_concrete', 'choose_team.blue', gui_join_team_blue, auto_close=True)
bind_gui_item('ender_eye', 'choose_team.spectator', gui_join_team_spectator, auto_close=True)
bind_gui_item('oak_door', 'choose_team.leave_team', gui_leave_team, auto_close=True)
