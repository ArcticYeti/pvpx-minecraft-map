from crankshaft:api import Listener
from crankshaft:events import on_load, on_tick, on_player_load, on_player_tick,
                              on_player_death, on_player_respawn

from ./game_state import get_game_state, set_game_state, GameState
import ./teams as teams
import ./gui as gui
import ./pvp as pvp
import ./utility_shulker as utility_shulker
import ./game_state as game_state
import ./game_states/choose_team/main as game_state_choose_team
import ./game_states/choose_class/main as game_state_choose_class

@Listener(on_load)
def _():
    say Loaded!

    effect give @a saturation infinite 0 true
    gamerule doDaylightCycle false
    gamerule doWeatherCycle false
    gamerule randomTickSpeed 0
    gamerule disableElytraMovementCheck true
    gamerule disableRaids true
    gamerule doFireTick false
    gamerule doInsomnia false
    gamerule doTileDrops false
    gamerule doTraderSpawning false
    gamerule keepInventory true
    gamerule doMobSpawning false
    gamerule spawnRadius 0
    time set noon
    game_state.load()
    utility_shulker.load()
    teams.load()
    pvp.load()

@Listener(on_tick)
def _():
    if get_game_state() == GameState.CHOOSE_TEAM:
        game_state_choose_team.tick()

@Listener(on_player_load)
def _():
    pvp.player_load()

    if get_game_state() == GameState.CHOOSE_TEAM:
        game_state_choose_team.player_load()

@Listener(on_player_tick)
def _():
    gui.player_tick()

    if get_game_state() == GameState.CHOOSE_TEAM:
        game_state_choose_team.player_tick()
